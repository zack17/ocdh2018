{"version":3,"sources":["ObjectCard.js","fragments.js","Loader.js","Error.js","util.js","SimilarObjectCard.js","RandomObjectCard.js","ObjectCards.js","ObjectView.js","App.js","serviceWorker.js","index.js"],"names":["ObjectCard","_ref","object","id","encodeURIComponent","react_default","a","createElement","className","Link","to","concat","src","picture","handle","alt","description","classification","name","class","yearfrom","yearto","origin","producer","ObjectDetailsFragment","gql","_templateObject","SameYearWhereClause","SameClassificationWhereClause","SameProducerWhereClause","SameClassificationAndProducerWhereClause","SameClassificationAndYearWhereClause","SameProducerAndYearWhereClause","Loader","Error","props","randomSkip","count","Math","random","SimilarObjectCard","_buildQuery","criteria","whereClause","includeYearVariables","variableDeclaration","variables","skip","Object","objectSpread","yearFrom","yearTo","query","SimilarObjectCard_templateObject","buildQuery","react_apollo_browser_umd","_ref2","loading","error","data","objects","RandomObjectCard","RandomObjectCard_templateObject","_templateObject2","objectsConnection","aggregate","pickOne","from","index","length","_from$splice","splice","slicedToArray","ObjectCards","ObjectCards_templateObject","_ref3","twoCriteriaClassifiers","sameProducerAndYear","sameClassificationAndYear","sameClassificationAndProducer","oneCriteriaClassifiers","sameProducer","sameClassification","sameYear","twoCriteriasWithResults","filter","result","singleCriteriaWithResults","otherCards","key","_pickOne","push","_pickOne2","_pickOne3","i","j","floor","shuffle","ObjectView","objectId","match","params","ObjectView_templateObject","ObjectView_templateObject2","App","Link_default","style","min-height","Route","path","exact","component","Component","Boolean","window","location","hostname","client","ApolloClient","uri","headers","Authorization","process","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2edce46b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport function ObjectCard({ object }) {\n  const id = encodeURIComponent(object.id);\n  return (\n    <div className=\"col-md-6 col-sm-12 mb-4 col-lg-3\">\n      <div className=\"card\">\n        <Link className=\"object-card\" to={`/objects/${id}`}>\n          <img\n            className=\"card-img-top\"\n            src={`https://media.graphcms.com/resize=width:500,height:500,fit:crop,align:center/compress/${\n              object.picture.handle\n            }`}\n            alt={object.description}\n          />\n        </Link>\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{object.classification.name}</h5>\n\n          <p class=\"card-text\">\n            <small class=\"text-muted\">\n              Dateperiod: {object.yearfrom} - {object.yearto} <br />\n              Origin: {object.origin ? object.origin.name : \"Unknown\"} <br />\n              Producer: {object.producer ? object.producer.name : \"Unknown\"}\n            </small>\n          </p>\n          <Link class=\"btn btn-primary\" to={`/objects/${id}`}>\n            Show similar objects\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\n\nexport const ObjectDetailsFragment = gql`\n  fragment ObjectDetailsFragment on Object {\n    id\n    yearfrom\n    yearto\n    description\n    classification {\n      id\n      name\n    }\n    origin {\n      id\n      name\n    }\n    producer {\n      id\n      name\n    }\n    picture {\n      handle\n    }\n  }\n`;\n\nexport const SameYearWhereClause =\n  \"where: { id_not: $id, yearfrom_lte: $yearTo, yearto_gte: $yearFrom }\";\n\nexport const SameClassificationWhereClause =\n  \"where: { id_not: $id, classification: { objects_some: { id: $id } } }\";\n\nexport const SameProducerWhereClause =\n  \"where: { id_not: $id, producer: { objects_some: { id: $id } } }\";\n\nexport const SameClassificationAndProducerWhereClause = `where: {\n    id_not: $id\n    classification: { objects_some: { id: $id } }\n    producer: { objects_some: { id: $id } }\n  }`;\n\nexport const SameClassificationAndYearWhereClause = `where: {\n    id_not: $id\n    yearfrom_lte: $yearTo\n    yearto_gte: $yearFrom\n    classification: { objects_some: { id: $id } }\n  }`;\n\nexport const SameProducerAndYearWhereClause = `where: {\n    id_not: $id\n    yearfrom_lte: $yearTo\n    yearto_gte: $yearFrom\n    producer: { objects_some: { id: $id } }\n  }`;\n","import React from \"react\";\n\nexport function Loader() {\n  return (\n    <div className=\"sk-cube-grid\">\n      <div className=\"sk-cube sk-cube1\" />\n      <div className=\"sk-cube sk-cube2\" />\n      <div className=\"sk-cube sk-cube3\" />\n      <div className=\"sk-cube sk-cube4\" />\n      <div className=\"sk-cube sk-cube5\" />\n      <div className=\"sk-cube sk-cube6\" />\n      <div className=\"sk-cube sk-cube7\" />\n      <div className=\"sk-cube sk-cube8\" />\n      <div className=\"sk-cube sk-cube9\" />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Error(props) {\n  return <h2 className=\"error\">Oh no, something went terribly wrong :(</h2>;\n}\n","export function randomSkip(count) {\n  return (Math.random() * count) | 0;\n}\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Loader } from \"./Loader\";\nimport { Error } from \"./Error\";\nimport {\n  ObjectDetailsFragment,\n  SameYearWhereClause,\n  SameProducerWhereClause,\n  SameClassificationWhereClause,\n  SameProducerAndYearWhereClause,\n  SameClassificationAndYearWhereClause,\n  SameClassificationAndProducerWhereClause\n} from \"./fragments\";\nimport { randomSkip } from \"./util\";\nimport { ObjectCard } from \"./ObjectCard\";\n\nfunction buildQuery(criteria, to, count) {\n  let includeYearVariables = false;\n  let whereClause;\n\n  switch (criteria) {\n    case \"year\":\n      includeYearVariables = true;\n\n      whereClause = SameYearWhereClause;\n      break;\n\n    case \"producer\":\n      whereClause = SameProducerWhereClause;\n      break;\n\n    case \"classification\":\n      whereClause = SameClassificationWhereClause;\n      break;\n\n    case \"producerAndYear\":\n      includeYearVariables = true;\n      whereClause = SameProducerAndYearWhereClause;\n      break;\n\n    case \"classificationAndYear\":\n      includeYearVariables = true;\n      whereClause = SameClassificationAndYearWhereClause;\n      break;\n\n    case \"classificationAndProducer\":\n      whereClause = SameClassificationAndProducerWhereClause;\n      break;\n\n    default:\n      throw new Error(`Unknown criteria ${criteria}`);\n  }\n\n  let variableDeclaration = \"$skip: Int!, $id: ID!\";\n  let variables = { id: to.id, skip: randomSkip(count) };\n\n  if (includeYearVariables) {\n    variables = {\n      ...variables,\n      yearFrom: to.yearfrom,\n      yearTo: to.yearto\n    };\n\n    variableDeclaration += \"$yearFrom: Int!, $yearTo: Int!\";\n  }\n\n  return {\n    query: gql`query SimilarObjects(${variableDeclaration}) {\n    objects(skip: $skip, first: 1, ${whereClause}) {\n      ...ObjectDetailsFragment\n    }\n  }\n  ${ObjectDetailsFragment}`,\n    variables\n  };\n}\n\nexport function SimilarObjectCard({ to, criteria, count }) {\n  const { query, variables } = buildQuery(criteria, to, count);\n\n  return (\n    <Query query={query} variables={variables}>\n      {({ loading, error, data }) => {\n        if (loading) {\n          return <Loader />;\n        }\n        if (error) {\n          return <Error error={error} />;\n        }\n\n        return <ObjectCard object={data.objects[0]} />;\n      }}\n    </Query>\n  );\n}\n","import React from \"react\";\nimport { ObjectCard } from \"./ObjectCard\";\nimport { Query } from \"react-apollo\";\nimport { ObjectDetailsFragment } from \"./fragments\";\nimport gql from \"graphql-tag\";\nimport { Loader } from \"./Loader\";\nimport { Error } from \"./Error\";\nimport { randomSkip } from \"./util\";\n\nexport function RandomObjectCard(props) {\n  return (\n    <Query\n      query={gql`\n        {\n          objectsConnection {\n            aggregate {\n              count\n            }\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          return <Loader />;\n        }\n        if (error) {\n          return <Error error={error} />;\n        }\n\n        return (\n          <Query\n            query={gql`\n              query RandomObject($skip: Int) {\n                objects(skip: $skip, first: 1) {\n                  ...ObjectDetailsFragment\n                }\n              }\n              ${ObjectDetailsFragment}\n            `}\n            variables={{\n              skip: randomSkip(data.objectsConnection.aggregate.count)\n            }}\n          >\n            {({ loading, error, data }) => {\n              if (loading) {\n                return <Loader />;\n              }\n              if (error) {\n                return <Error error={error} />;\n              }\n\n              return <ObjectCard object={data.objects[0]} />;\n            }}\n          </Query>\n        );\n      }}\n    </Query>\n  );\n}\n","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Error } from \"./Error\";\nimport { Loader } from \"./Loader\";\nimport { SimilarObjectCard } from \"./SimilarObjectCard\";\nimport { RandomObjectCard } from \"./RandomObjectCard\";\nimport {\n  SameYearWhereClause,\n  SameClassificationWhereClause,\n  SameProducerWhereClause,\n  SameClassificationAndProducerWhereClause,\n  SameClassificationAndYearWhereClause,\n  SameProducerAndYearWhereClause\n} from \"./fragments\";\nimport { ObjectCard } from \"./ObjectCard\";\n\nfunction pickOne(from) {\n  const index = (Math.random() * from.length) | 0;\n  const [item] = from.splice(index, 1);\n  return item;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport function ObjectCards({ to }) {\n  const query = gql`\n    query RelationCounts($id: ID!, $yearFrom: Int!, $yearTo: Int!) {\n      sameYear: objectsConnection(\n        ${SameYearWhereClause}\n      ) {\n        aggregate {\n          count\n        }\n      }\n\n      sameClassification: objectsConnection(\n        ${SameClassificationWhereClause}\n      ) {\n        aggregate {\n          count\n        }\n      }\n\n      sameProducer: objectsConnection(\n        ${SameProducerWhereClause}\n      ) {\n        aggregate {\n          count\n        }\n      }\n\n      sameClassificationAndProducer: objectsConnection(\n        ${SameClassificationAndProducerWhereClause}\n      ) {\n        aggregate {\n          count\n        }\n      }\n\n      sameClassificationAndYear: objectsConnection(\n        ${SameClassificationAndYearWhereClause}\n      ) {\n        aggregate {\n          count\n        }\n      }\n\n      sameProducerAndYear: objectsConnection(\n        ${SameProducerAndYearWhereClause}\n      ) {\n        aggregate {\n          count\n        }\n      }\n    }\n  `;\n\n  return (\n    <Query\n      query={query}\n      variables={{\n        id: to.id,\n        yearFrom: to.yearfrom,\n        yearTo: to.yearto\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          return <Loader />;\n        }\n\n        if (error) {\n          return <Error error={error} />;\n        }\n\n        const twoCriteriaClassifiers = [\n          {\n            criteria: \"producerAndYear\",\n            count: data.sameProducerAndYear.aggregate.count\n          },\n          {\n            criteria: \"classificationAndYear\",\n            count: data.sameClassificationAndYear.aggregate.count\n          },\n          {\n            criteria: \"classificationAndProducer\",\n            count: data.sameClassificationAndProducer.aggregate.count\n          }\n        ];\n\n        const oneCriteriaClassifiers = [\n          {\n            criteria: \"producer\",\n            count: data.sameProducer.aggregate.count\n          },\n          {\n            criteria: \"classification\",\n            count: data.sameClassification.aggregate.count\n          },\n          {\n            criteria: \"year\",\n            count: data.sameYear.aggregate.count\n          }\n        ];\n\n        const twoCriteriasWithResults = twoCriteriaClassifiers.filter(\n          result => result.count > 0\n        );\n        const singleCriteriaWithResults = oneCriteriaClassifiers.filter(\n          result => result.count > 0\n        );\n\n        const otherCards = [<RandomObjectCard key=\"random\" />];\n        if (twoCriteriasWithResults.length > 0) {\n          const { criteria, count } = pickOne(twoCriteriasWithResults);\n          otherCards.push(\n            <SimilarObjectCard\n              to={to}\n              criteria={criteria}\n              key={criteria}\n              count={count}\n            />\n          );\n        } else if (singleCriteriaWithResults.length > 0) {\n          const { criteria, count } = pickOne(singleCriteriaWithResults);\n          otherCards.push(\n            <SimilarObjectCard\n              to={to}\n              criteria={criteria}\n              key={criteria}\n              count={count}\n            />\n          );\n        } else {\n          otherCards.push(<RandomObjectCard key=\"random1\" />);\n        }\n\n        if (singleCriteriaWithResults.length > 0) {\n          const { criteria, count } = pickOne(singleCriteriaWithResults);\n          otherCards.push(\n            <SimilarObjectCard\n              to={to}\n              criteria={criteria}\n              key={criteria}\n              count={count}\n            />\n          );\n        } else {\n          otherCards.push(<RandomObjectCard key=\"random2\" />);\n        }\n\n        shuffle(otherCards);\n\n        return (\n          <div className=\"container\">\n            <div className=\"row\">\n              <ObjectCard object={to} />\n              {otherCards}\n            </div>\n          </div>\n        );\n      }}\n    </Query>\n  );\n}\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ObjectCard } from \"./ObjectCard\";\nimport { ObjectDetailsFragment } from \"./fragments\";\nimport { Loader } from \"./Loader\";\nimport { Error } from \"./Error\";\nimport { ObjectCards } from \"./ObjectCards\";\n\nexport function ObjectView(props) {\n  const objectId = props.match.params.objectId;\n  let query;\n\n  if (objectId) {\n    query = gql`\n      query QueryObjectById($id: ID!) {\n        objects(first: 1, where: { id: $id }) {\n          ...ObjectDetailsFragment\n        }\n      }\n      ${ObjectDetailsFragment}\n    `;\n  } else {\n    query = gql`\n      {\n        objects(first: 1) {\n          ...ObjectDetailsFragment\n        }\n      }\n      ${ObjectDetailsFragment}\n    `;\n  }\n\n  return (\n    <Query query={query} variables={{ id: objectId }}>\n      {({ loading, error, data }) => {\n        if (loading) {\n          return <Loader />;\n        }\n\n        if (error) {\n          return <Error error={error} />;\n        }\n\n        const [object] = data.objects;\n\n        return <ObjectCards to={object} />;\n      }}\n    </Query>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ObjectView } from \"./ObjectView\";\nimport Link from \"react-router-dom/Link\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App container\">\n        <nav class=\"navbar navbar-dark bg-dark\">\n          <Link class=\"navbar-brand\" to=\"/\">\n            Artify\n          </Link>\n        </nav>\n        <main className=\" mt-4 mb-4\" style={{ \"min-height\": \"420px\" }}>\n          <Route path=\"/\" exact component={ObjectView} />\n          <Route path=\"/objects/:objectId\" exact component={ObjectView} />\n        </main>\n        <footer>\n          <small className=\"text-muted\">\n            Artify is a Project created at the 4th Swiss Open Cultural Data\n            Hackathon in Zurich 2018\n          </small>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst client = new ApolloClient({\n  uri: \"https://api-euwest.graphcms.com/v1/cjnr7i2yb0bje01glv5s68dio/master\",\n  headers: {\n    Authorization: `Bearer ${process.env.REACT_APP_GRAPH_CMS_TOKEN}`\n  }\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}